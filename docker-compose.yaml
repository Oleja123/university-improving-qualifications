services:
  backend:
    image: university:latest
    container_name: university
    ports: 
      - "8000:5000"
    build:
      context: ./
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DATABASE_URL: ${DATABASE_URL}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_HOSTNAME: ${REDIS_HOSTNAME}
      LOG_TO_STDOUT: ${LOG_TO_STDOUT}

  db:
    image: postgres:latest
    container_name: university_pg
    ports: 
      - "1408:5432"
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s 
      retries: 5
      start_period: 10s
    volumes:
      - postgres_data:/var/lib/postgresql/data
      
  redis:
    image: redis:latest
    container_name: university_redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports: 
      - "2208:5432"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli", "-a", "$${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s 
      retries: 5
      start_period: 10s
    volumes:
      - redis_data:/var/lib/redis/data
    

volumes:
  postgres_data:
  redis_data: